name: HTML Quality Check

on:
  workflow_dispatch:
    inputs:
      branch:
        description: "Branch to scan"
        required: true

      repo:
        description: "Repositorio"  
        required: true

jobs:
  scan-html:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        repository: mvthivs23/${{ github.event.inputs.repo }}
        ref: ${{ github.event.inputs.branch }}
    - name: Clone the repository to be scanned
      run: |
          git clone --branch ${{ github.event.inputs.branch }} https://github.com/mvthivs23/${{ github.event.inputs.repo }} target_repo
          ls -la target_repo

    - name: Run HTML Quality Check
      id: html_check
      run: |
          echo "Running HTML quality check..."

          REPO_DIR="target_repo"

          if [ -d "$REPO_DIR" ]; then
            echo "Scanning HTML files in $REPO_DIR..."
            
            # Define the pattern to search for in comments
            PATTERN="<!--.*-->"

            # Search for comments in HTML files
            MATCHES=$(grep -r -iE "$PATTERN" "$REPO_DIR"/*.html || true)

            if [ -n "$MATCHES" ]; then
              echo "-------------------------------------"
              echo "Comentarios encontrados en los archivos HTML:"
              echo "$MATCHES"
              echo "-------------------------------------"
              echo "::set-output name=status::fail"
            else
              echo "-------------------------------------"
              echo "No se encontraron comentarios en los archivos HTML."
              echo "-------------------------------------"
              echo "::set-output name=status::pass"
            fi
            
          else
            echo "Error: Directory $REPO_DIR does not exist."
            exit 1
          fi
  
  approval-status:
    runs-on: ubuntu-latest
    needs: scan-html
    if: ${{ needs.scan-html.outputs.status == 'pass' }}
    steps:
      - name: Approval Status
        run: |
          echo "-------------------------------------"
          echo "El VB ha sido aprobado."
          echo "-------------------------------------"

  rejection-status:
    runs-on: ubuntu-latest
    needs: scan-html
    if: ${{ needs.scan-html.outputs.status == 'fail' }}
    steps:
      - name: Rejection Status
        run: |
          echo "-------------------------------------"
          echo "El VB ha sido rechazado."
          echo "-------------------------------------"
          exit 1